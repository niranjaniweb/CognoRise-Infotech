import pygame
import random

# Initialize Pygame
pygame.init()

# Constants
WIDTH, HEIGHT = 800, 600
PADDLE_WIDTH, PADDLE_HEIGHT = 10, 100
BALL_RADIUS = 10
PADDLE_SPEED = 5
BALL_SPEED = 5
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)

# Create the game window
window = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Ping Pong")

# Define game objects
class Paddle(pygame.sprite.Sprite):
    def __init__(self, x, y):
        super().__init__()
        self.image = pygame.Surface([PADDLE_WIDTH, PADDLE_HEIGHT])
        self.image.fill(WHITE)
        self.rect = self.image.get_rect()
        self.rect.x = x
        self.rect.y = y

    def move_up(self):
        self.rect.y -= PADDLE_SPEED
        if self.rect.y < 0:
            self.rect.y = 0

    def move_down(self):
        self.rect.y += PADDLE_SPEED
        if self.rect.y > HEIGHT - PADDLE_HEIGHT:
            self.rect.y = HEIGHT - PADDLE_HEIGHT

class Ball(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.image = pygame.Surface([BALL_RADIUS * 2, BALL_RADIUS * 2])
        self.image.fill(WHITE)
        pygame.draw.circle(self.image, BLACK, (BALL_RADIUS, BALL_RADIUS), BALL_RADIUS)
        self.rect = self.image.get_rect()
        self.rect.x = WIDTH // 2
        self.rect.y = HEIGHT // 2
        self.direction_x = random.choice([-1, 1])
        self.direction_y = random.choice([-1, 1])

    def update(self):
        self.rect.x += BALL_SPEED * self.direction_x
        self.rect.y += BALL_SPEED * self.direction_y

        if self.rect.y <= 0 or self.rect.y >= HEIGHT - BALL_RADIUS * 2:
            self.direction_y *= -1

    def reset(self):
        self.rect.x = WIDTH // 2
        self.rect.y = HEIGHT // 2
        self.direction_x = random.choice([-1, 1])
        self.direction_y = random.choice([-1, 1])

# Create sprites
player_paddle = Paddle(20, HEIGHT // 2 - PADDLE_HEIGHT // 2)
ai_paddle = Paddle(WIDTH - 20 - PADDLE_WIDTH, HEIGHT // 2 - PADDLE_HEIGHT // 2)
ball = Ball()

# Sprite groups
all_sprites = pygame.sprite.Group()
all_sprites.add(player_paddle, ai_paddle, ball)

# Main game loop
clock = pygame.time.Clock()
running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    keys = pygame.key.get_pressed()
    if keys[pygame.K_UP]:
        player_paddle.move_up()
    if keys[pygame.K_DOWN]:
        player_paddle.move_down()

    if ball.rect.y < ai_paddle.rect.y + PADDLE_HEIGHT // 2:
        ai_paddle.move_up()
    elif ball.rect.y > ai_paddle.rect.y + PADDLE_HEIGHT // 2:
        ai_paddle.move_down()

    ball.update()

    if pygame.sprite.collide_rect(ball, player_paddle) or pygame.sprite.collide_rect(ball, ai_paddle):
        ball.direction_x *= -1

    if ball.rect.x <= 0:
        ball.reset()
    elif ball.rect.x >= WIDTH - BALL_RADIUS * 2:
        ball.reset()

    window.fill(BLACK)
    all_sprites.draw(window)

    pygame.display.flip()
    clock.tick(60)

pygame.quit()

